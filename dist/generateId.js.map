{"version":3,"sources":["../dist-esnext/generateId.js"],"names":["P","generateIdWith","curry","genId","o","id","isNotNilOrEmpty","_id","assoc","generateId","generate"],"mappings":";;;;;;;AAAA;;IAAYA,C;;AACZ;;;;AACA;;;;;;;;AACA;;;AAGO,MAAMC,0CAAiB,gBAAEC,KAAF,CAAQ,CAACC,KAAD,EAAQC,CAAR,KAAc;AAChD,QAAI,CAACA,CAAL,EACI,OAAO,EAAEC,IAAIF,OAAN,EAAP;AACJ,QAAIH,EAAEM,eAAF,CAAkBF,EAAEC,EAApB,CAAJ,EACI,OAAOD,CAAP;AACJ,UAAMC,KAAKL,EAAEM,eAAF,CAAkBF,EAAEG,GAApB,IAA2BH,EAAEG,GAA7B,GAAmCJ,OAA9C;AACA,WAAO,gBAAEK,KAAF,CAAQ,IAAR,EAAcH,EAAd,EAAkBD,CAAlB,CAAP;AACH,CAP6B,CAAvB;AAQP;;;AAGO,MAAMK,kCAAaR,eAAe,kBAAQS,QAAvB,CAAnB;AACP","file":"generateId.js","sourcesContent":["import * as P from 'ptz-fp';\r\nimport R from 'ramda';\r\nimport shortid from 'shortid';\r\n/**\r\n * Generate Id with custom function.\r\n */\r\nexport const generateIdWith = R.curry((genId, o) => {\r\n    if (!o)\r\n        return { id: genId() };\r\n    if (P.isNotNilOrEmpty(o.id))\r\n        return o;\r\n    const id = P.isNotNilOrEmpty(o._id) ? o._id : genId();\r\n    return R.assoc('id', id, o);\r\n});\r\n/**\r\n * Generate Id if .id and ._id are null or undefined.\r\n */\r\nexport const generateId = generateIdWith(shortid.generate);\r\n//# sourceMappingURL=generateId.js.map"]}